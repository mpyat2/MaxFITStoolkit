; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "FITS utils"
#define MyAppVersion "1.1.6"
#define MyAppPublisher "mpyat2@gmail.com"
#define MyAppURL "https://sourceforge.net/projects/fits-command-line-utilities/"
#define MyAppExeName "HelloIRISFITS.exe"

#define WIN64OR32ONLY

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{FAA136A8-87C2-4CAB-8187-BAF0641A2A5D}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={sd}\{#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename=FITS-Utils-setup
Compression=lzma
SolidCompression=yes
PrivilegesRequired=lowest
ChangesEnvironment=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "..\bin-out\HelloIRISFITS.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\fihed.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\fflip.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\idobs.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\idfix.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\ipdat.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\apdat.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\iren.exe"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\igagen.exe"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\fitscfa.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\fitscfa.ini"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\fitsrgb.exe"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\cfa2rgb.exe"; DestDir: "{app}"; Flags: ignoreversion

#ifdef WIN64OR32ONLY
Source: "..\bin-out\makestack.exe"; DestDir: "{app}"; Flags: ignoreversion
#else
; 1.1.2: only makestack exists in pure 32 or 64 variant.
Source: "..\bin-out\makestack64.exe" ; DestDir: "{app}"; DestName: "makestack.exe"  ; Check: "IsWin64"     ; Flags: ignoreversion
Source: "..\bin-out\makestack32.exe" ; DestDir: "{app}"; DestName: "makestack32.exe"; Check: "IsWin64"     ; Flags: ignoreversion
Source: "..\bin-out\makestack32.exe" ; DestDir: "{app}"; DestName: "makestack.exe"  ; Check: "not IsWin64" ; Flags: ignoreversion
#endif

Source: "..\bin-out\find_hot.exe"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\fitsstat.exe"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\iconvfits.exe"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\iconvraw.exe"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\LibRawMxWrapper*.dll"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\bin-out\fitsutils.ini"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin-out\fitsutils.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Scripts\*"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Samples\*"; DestDir: "{app}\SAMPLES"; Flags: ignoreversion
Source: "..\APDAT\TESTDATA\*"; DestDir: "{app}\TESTDATA\APDAT"; Flags: ignoreversion
Source: "..\IPDAT\TESTDATA\*"; DestDir: "{app}\TESTDATA\IPDAT"; Flags: ignoreversion

Source: "..\bin-out\LICENSE"; DestDir: "{app}"; Flags: ignoreversion

;Source: "..\bin-out\pfh.exe"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKCU; Subkey: "Environment"; ValueType: expandsz; ValueName: "PATH"; ValueData: "{olddata};{app}"; Check: PathNotExist(ExpandConstant('{app}'))

[Code]
function PathNotExist(Param: string): boolean;
var
  OrigPath: string;
begin
  //MsgBox(Param, mbInformation, MB_OK);
  if not RegQueryStringValue(
    HKEY_CURRENT_USER,
    'Environment',
    'PATH', OrigPath)
  then begin
    Result := True;
    Exit;
  end;
  Result :=
    (Pos(';' + UpperCase(Param) + ';', ';' + UpperCase(OrigPath) + ';') = 0) and
    (Pos(';' + UpperCase(Param) + '\;', ';' + UpperCase(OrigPath) + ';') = 0); 
end;

[Icons]
Name: "{userprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{userdesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
